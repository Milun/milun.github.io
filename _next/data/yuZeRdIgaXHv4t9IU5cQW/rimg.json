{"pageProps":{"post":{"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {Rimg, Accordion} = _components;\n  if (!Accordion) _missingMdxReference(\"Accordion\", true);\n  if (!Rimg) _missingMdxReference(\"Rimg\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(Rimg, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"I developed this plugin to ensure that if a webpage's language was translated, text within images would \", _jsx(_components.em, {\n        children: \"also\"\n      }), \" follow suit.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you have a \", _jsx(_components.a, {\n        href: \"https://chrome.google.com/webstore/detail/google-translate/aapbdbdomjkkjkaonfhkkikfgjllcleb\",\n        children: \"translation app\"\n      }), \" installed on your browser, try translating this page to see it in action!\"]\n    }), \"\\n\", _jsxs(Accordion, {\n      children: [_jsx(_components.p, {\n        children: \"When developing e-learning material, the need to use images containing text is an inevitability. Whether they are used to display complex diagrams, or be simple decorations, the issue of accessibility arises.\"\n      }), _jsxs(_components.p, {\n        children: [\"The \", _jsx(_components.a, {\n          href: \"https://www.w3.org/WAI/tutorials/images/textual/\",\n          children: \"standard practice\"\n        }), \" is to provide metadata for accessibility, but this becomes \", _jsx(_components.a, {\n          href: \"https://www.w3.org/WAI/tutorials/images/complex/\",\n          children: \"overly complicated\"\n        }), \" when needed for maps, graphs, or diagrams; such as those required by educational material.\"]\n      }), _jsx(_components.p, {\n        children: \"To solve this issue, I developed a node.js plugin which would automatically process and display text from SVG images in a way that would not only allow it to translate, but also adjust its size and position depending on its new translated length.\"\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"test":"ERROR"}},"data":{"id":"rimg","content":"import Image from 'next/image';\r\nimport Accordion from \"@components/Accordion\";\r\nimport Rimg from \"@components/Rimg\";\r\n\r\n<Rimg></Rimg>\r\n\r\nI developed this plugin to ensure that if a webpage's language was translated, text within images would *also* follow suit.\r\n\t\t\t\r\nIf you have a [translation app](https://chrome.google.com/webstore/detail/google-translate/aapbdbdomjkkjkaonfhkkikfgjllcleb) installed on your browser, try translating this page to see it in action!\r\n\r\n<Accordion>\r\n    When developing e-learning material, the need to use images containing text is an inevitability. Whether they are used to display complex diagrams, or be simple decorations, the issue of accessibility arises.\r\n\r\n    The [standard practice](https://www.w3.org/WAI/tutorials/images/textual/) is to provide metadata for accessibility, but this becomes [overly complicated](https://www.w3.org/WAI/tutorials/images/complex/) when needed for maps, graphs, or diagrams; such as those required by educational material.\r\n\r\n\tTo solve this issue, I developed a node.js plugin which would automatically process and display text from SVG images in a way that would not only allow it to translate, but also adjust its size and position depending on its new translated length.\r\n</Accordion>","carousel":false,"title":"Responsive Image","desc":"A plugin to make SVGs accessible","thumbnail":"tba.svg","role":"Lead developer","date":2019,"tags":["Adobe suite","JavaScript","Node.js","Accessibility"]}}},"__N_SSG":true}
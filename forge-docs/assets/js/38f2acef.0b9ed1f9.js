"use strict";(self.webpackChunkforge=self.webpackChunkforge||[]).push([[91],{3911:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var o=n(4848),s=n(8453);const i={sidebar_position:1},a="Components",c={id:"templates/components/index",title:"Components",description:"These are the core 'templates' used to make each block's components. Just copy & paste the JSYNT section provided on each page to get started. Each guide has been formatted to have the JSYNT section first for easy copy + pasting.",source:"@site/docs/templates/components/index.md",sourceDirName:"templates/components",slug:"/templates/components/",permalink:"/forge-docs/templates/components/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Templates",permalink:"/forge-docs/templates/"},next:{title:"Text",permalink:"/forge-docs/templates/components/text"}},r={},d=[{value:"Component types",id:"component-types",level:3},{value:"Changing the component type of an existing block",id:"changing-the-component-type-of-an-existing-block",level:3}];function p(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h3:"h3",img:"img",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"components",children:"Components"}),"\n",(0,o.jsxs)(t.p,{children:["These are the core 'templates' used to make each block's components. Just copy & paste the ",(0,o.jsx)(t.em,{children:"JSYNT"})," section provided on each page to get started. Each guide has been formatted to have the JSYNT section first for easy copy + pasting."]}),"\n",(0,o.jsx)(t.h3,{id:"component-types",children:"Component types"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Components 1",src:n(3670).A+"",width:"999",height:"275"})}),"\n",(0,o.jsx)(t.p,{children:"Each component has a type assigned to it, which tells Forge what 'template' to use to render it. This also provides you an easy way to tell which template is being used at a glance."}),"\n",(0,o.jsxs)(t.p,{children:["For example, in the above image, the JSYNT will be rendered as a ",(0,o.jsx)(t.a,{href:"./text",children:"Text"})," component."]}),"\n",(0,o.jsx)(t.admonition,{type:"info",children:(0,o.jsxs)(t.p,{children:["Most components types are flexible (have multiple layouts/modes). This is why they follow the ",(0,o.jsx)(t.code,{children:"TYPE - MODE"})," naming convention."]})}),"\n",(0,o.jsx)(t.h3,{id:"changing-the-component-type-of-an-existing-block",children:"Changing the component type of an existing block"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Scenario:"})," You have designed a block with a ",(0,o.jsx)(t.a,{href:"./textItems",children:"Text - Items"})," component, but now think it would look better as an ",(0,o.jsx)(t.a,{href:"./accordion",children:"Accordion"})," component instead. Do you need to re-copy & paste everything? Not at all!"]}),"\n",(0,o.jsxs)(t.p,{children:["All of these components have been designed to have very similar JSYNT formatting. As such, all you would need to do is change the value of ",(0,o.jsx)(t.code,{children:'"_component"'})," from ",(0,o.jsx)(t.code,{children:'"text"'})," to ",(0,o.jsx)(t.code,{children:'"accordion"'}),", and Forge will swap the template being used!"]}),"\n",(0,o.jsx)(t.admonition,{type:"warning",children:(0,o.jsx)(t.p,{children:"This won't always be so easy. Some components need additional options to be added in order to work. Just compare the formatting between templates and add in what's missing if you do this."})})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},3670:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/forge-templates-components-1-058875466d182898749812ab3b304007.png"},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var o=n(6540);const s={},i=o.createContext(s);function a(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);